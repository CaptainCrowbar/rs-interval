#!/usr/bin/env bash

set -euo pipefail

if [[ "${PWD##*/}" =~ build ]]; then
    cd ..
fi

main=$(find . -name unit-test.cpp)

if ! [ "$main" ]; then

    srcdir=.

    for s in source src; do
        if [ -d "$s" ]; then
            srcdir="$s"
            break
        fi
    done

    if [ -d "$srcdir/test" ]; then
        srcdir="$srcdir/test"
    fi

    main="$srcdir/unit-test.cpp"

fi

temp="${main%.cpp}.temp.cpp"
cmake=$(find . -name CMakeLists.txt)

if ! [ "$cmake" ]; then
    echo "*** CMakeLists.txt not found"
    exit 1
fi

testfiles=$(grep -E '[-]test\.cpp$' "$cmake" \
    | sed -E 's!^ +!source/!' \
    | grep -Ev "/unit-test\.cpp")

testinc=$(grep -Eh '#include ".*unit-test\.hpp"' $testfiles | head -n 1)

cat > $temp << EOF
// This file is generated by the update-tests script

$testinc

EOF

for file in $testfiles; do
    if [ -f "$file" ]; then
        group=$(tr - _ <<< ${file##*/} | sed -E 's/\.cpp/_group/')
        echo "void $group() {" >> $temp
        grep -Eh '^void test_' "$file" \
            | sed -E 's/^void test_([a-z0-9_]+)\(\).*$/\1/' \
            | grep -Ev '^void ' \
            | sed -E 's/.+/    UNIT_TEST(&)/' \
            >> $temp \
            || true
        echo "}" >> $temp
        echo >> $temp
    fi
done

cat >> $temp << EOF
int main(int argc, char** argv) {

    RS::UnitTest::begin_tests(argc, argv);

EOF

for file in $testfiles; do
    if [ -f "$file" ]; then
        group=$(tr - _ <<< ${file##*/} | sed -E 's/\.cpp/_group/')
        echo "    $group();" >> $temp
    fi
done

cat >> $temp << EOF

    return RS::UnitTest::end_tests();

}
EOF

if cmp -s $temp $main; then
    rm $temp
else
    mv $temp $main
fi
